# Функции объявляются с помощью ключевого слова def (от слова define – определять).
# За ключевым словом def следуют название функции, круглые скобки(), и двоеточие:.

def draw_box():           # объявление функции
    for _ in range(5):
        print('*' * 7)


draw_box()             # вызов ф-ции для начала её работы


# функции могут принимать входные параметры, что делает их более гибкими.

# Функции с параметрами объявляются так же как функции без параметров, только с
# указанием в скобках:

# def название_функции(параметры):
#     блок кода
print()


def draw_box(height, width):    # функция принимает два параметра
    for i in range(height):
        print('*' * width)


draw_box(5, 7)             # вызов ф-ции для начала её работы


# Теперь с помощью нашей новой версии функции draw_box() можем в одной программе
# выводить прямоугольники разных размеров. Следующий программный код:

print()
draw_box(3, 3)
print()
draw_box(5, 5)
print()
draw_box(4, 10)
print()


# На место параметров мы можем подставлять не только целочисленные константы, но
# и значения переменных. Следующий программный код:

n = 3
m = 9
draw_box(n, m)

# Функцию print_hello() можно сделать более гибкой, если передавать в нее еще
# один параметр – текст для вывода:


def print_text(txt, n):
    print(txt * n)


print_text('Hello', 5)
print_text('A', 10)


# Когда аргумент передается в функцию, параметрическая переменная функции будет
# ссылаться на значение этого аргумента. Однако любые изменения, которые вносятся в
# параметрическую переменную, не будут влиять на аргумент.

# Cледующий программный код:
def draw_box(height, width):
    height = 2
    width = 10
    for i in range(height):
        print('*' * width)


n = 5
m = 7
draw_box(n, m)
print(n, m)
